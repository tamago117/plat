<?xml version="1.0"?>
<launch>
    <arg name="map_frame_id" default="map"/>
    <arg name="base_link_frame_id" default="base_link"/>
    <arg name="loop_rate" default="50"/>
    <arg name="fileName" default="way1"/>

    <arg name="sim" default="false"/>
    <!--<arg name="world_name" default="$(find plat)/worlds/clearpath_playpen.world"/>-->
    <arg name="world_name" default="$(find plat)/worlds/autoware.world"/>
    <!--<arg name="map_pcd" value = "$(find plat)/resources/pcd/clearpath.pcd"/>-->
    <arg name="map_pcd" value = "$(find plat)/resources/pcd/autoware.pcd"/>
    <!--<arg name="map_pcd" value = "$(find plat)/resources/pcd/3L.pcd"/>-->

    <arg name="model" default="$(find plat)/robots/plat.urdf.xacro"/>

    <!--gazebo-->
    <group if="$(arg sim)">
        <include file="$(find plat)/launch/include/sim.launch">
            <arg name="world_name" value="$(arg world_name)"/>
        </include>
    </group>
    <group unless="$(arg sim)">
        <!--<node name="map_static" pkg="tf2_ros" type="static_transform_publisher"
            args="0 0 0 0 0 0 map odom"/>-->
        <include file="$(find plat)/launch/include/sensor.launch"/>
        <node name = "mode_publisher" pkg = "rostopic" type = "rostopic"
        args = "pub mode std_msgs/String -r 1 'run'"/>
    </group>

    <!--sensor process-->
    <include file="$(find plat)/launch/include/sensor_process.launch"/>

    <!--3d localization-->
    <include file="$(find plat)/launch/include/slam_3d.launch">
        <arg name="map_pcd" value = "$(arg map_pcd)"/>
        <arg name="mcl_3dl_config" value="$(find plat)/config/mcl_3dl.yaml"/>
    </include>

    <!--joystick-->
    <node name="joystickPS4" pkg="eg_mixed" type="joystickPS4">
        <param name="v_control_rate" value="0.8"/>
        <param name="w_control_rate" value="1.5"/>
        <remap from="cmd_vel" to="ps4/cmd_vel"/>
    </node>
    <node name="joy_node" pkg="joy" type="joy_node"/>

    <!--safety function-->
    <node pkg="eg_mixed" name="laser2pc" type="laser2pc"/>
    <node pkg="eg_safety" name="safety_limit" type="safety_limit" output="screen">
        <rosparam file="$(find plat)/config/safety_limit.yaml" command="load" />

        <remap from="safety_limit/cmd_vel_in" to="ps4/cmd_vel"/>
        <remap from="safety_limit/cmd_vel_out" to="diff_drive_controller/cmd_vel"/>
        <!--<group if="$(arg sim)">
            <remap from="safety_limit/cmd_vel_out" to="diff_drive_controller/cmd_vel"/>
        </group>
        <group unless="$(arg sim)">
            <remap from="safety_limit/cmd_vel_out" to="cmd_vel"/>
        </group>-->
    </node>

    <node name="wpRecord" pkg="eg_wptool" type="wpRecord">
        <param name="map_frame_id" value="$(arg map_frame_id)"/>
        <param name="base_link_frame_id" value="$(arg base_link_frame_id)"/>
        <param name="loop_rate" value="$(arg loop_rate)"/>
        <param name="wayPoint_pitch" value="4"/>
    </node>

    <node name="csvOutput" pkg="eg_wptool" type="csvOutput">
        <param name="filePath" value="$(find plat)/csv/$(arg fileName)"/>
        <remap from="csv_array"  to="path2csv"/>
    </node>

    <!--rviz-->
    <!--model show-->
    <include file="$(find plat)/launch/include/model_show.launch" >
        <arg name="include" value="true"/>
        <arg name="model" default="$(arg model)" />
    </include>
    <arg name="rvizconfig" default="$(find plat)/rviz/wpRecord_3d.rviz" />
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" respawn="true" />

</launch>