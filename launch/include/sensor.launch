<launch>
  <!-- declare arguments with default values -->
  <arg name="calibration" default="$(find velodyne_pointcloud)/params/32db.yaml"/>
  <arg name="device_ip" default="" />
  <arg name="frame_id" default="velodyne" />
  <arg name="manager" default="$(arg frame_id)_nodelet_manager_" />
  <arg name="max_range" default="100.0" />
  <arg name="min_range" default="1.0" />
  <arg name="pcap" default="" />
  <arg name="port" default="2368" />
  <arg name="read_fast" default="false" />
  <arg name="read_once" default="false" />
  <arg name="repeat_delay" default="0.0" />
  <arg name="rpm" default="600.0" />
  <arg name="cut_angle" default="-0.01" />
  <arg name="laserscan_ring" default="-1" />
  <arg name="laserscan_resolution" default="0.007" />

  <!-- start nodelet manager and driver nodelets -->
  <include file="$(find velodyne_pointcloud)/launch/32e_points.launch">
    <arg name="device_ip" value="$(arg device_ip)"/>
    <arg name="frame_id" value="$(arg frame_id)"/>
    <arg name="manager" value="$(arg manager)" />
    <arg name="pcap" value="$(arg pcap)"/>
    <arg name="port" value="$(arg port)"/>
    <arg name="read_fast" value="$(arg read_fast)"/>
    <arg name="read_once" value="$(arg read_once)"/>
    <arg name="repeat_delay" value="$(arg repeat_delay)"/>
    <arg name="rpm" value="$(arg rpm)"/>
    <arg name="cut_angle" value="$(arg cut_angle)"/>
    <arg name="max_range" default="$(arg max_range)" />
    <arg name="min_range" default="$(arg min_range)" />
  </include>

  <node name="urg_node" pkg="urg_node" type="urg_node" output="screen">
 	  <remap from="/scan" to="/urg/scan"/>
    <param name="ip_address" value="192.168.6.119"/>
   	<param name="frame_id" value="front_lrf_link"/>
   	<param name="calibrate_time" value="true"/>
   	<param name="publish_intensity" value="false"/>
   	<param name="publish_multiecho" value="false"/>
   	<param name="angle_min" value="-0.4"/>
  	<param name="angle_max" value="0.4"/>
	</node>

  <include file="$(find spinnaker_camera_driver)/launch/camera.launch"/>

  <node name="serial_node"        pkg="rosserial_python"      type="serial_node.py">
			<param name="port"              type="string"               value="/dev/ttyACM0"/>
			<param name="baud"              type="int"                  value="115200"/>
      <remap from="plat/cmd_vel" to="diff_drive_controller/cmd_vel"/>
      <remap from="plat/mode_in" to="mode"/>
	</node>

</launch>